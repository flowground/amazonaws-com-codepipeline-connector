{
    "name": "amazonaws-com-codepipeline-connector",
    "version": "2015.0.0",
    "description": "AWS CodePipeline  Overview \n\nThis is the AWS CodePipeline API Reference. This guide provides descriptions of\nthe actions and data types for AWS CodePipeline. Some functionality for your\npipeline is only configurable through the API. For additional information, see\nthe AWS CodePipeline User Guide\n[http://docs.aws.amazon.com/codepipeline/latest/userguide/welcome.html].\n\nYou can use the AWS CodePipeline API to work with pipelines, stages, actions,\nand transitions, as described below.\n\n Pipelines are models of automated release processes. Each pipeline is uniquely\nnamed, and consists of stages, actions, and transitions. \n\nYou can work with pipelines by calling:\n\n *   CreatePipeline, which creates a uniquely-named pipeline.\n   \n   \n *   DeletePipeline, which deletes the specified pipeline.\n   \n   \n *   GetPipeline, which returns information about the pipeline structure and\n   pipeline metadata, including the pipeline Amazon Resource Name (ARN).\n   \n   \n *   GetPipelineExecution, which returns information about a specific execution\n   of a pipeline.\n   \n   \n *   GetPipelineState, which returns information about the current state of the\n   stages and actions of a pipeline.\n   \n   \n *   ListPipelines, which gets a summary of all of the pipelines associated with\n   your account.\n   \n   \n *   ListPipelineExecutions, which gets a summary of the most recent executions\n   for a pipeline.\n   \n   \n *   StartPipelineExecution, which runs the the most recent revision of an\n   artifact through the pipeline.\n   \n   \n *   UpdatePipeline, which updates a pipeline with edits or changes to the\n   structure of the pipeline.\n   \n   \n\nPipelines include stages. Each stage contains one or more actions that must\ncomplete before the next stage begins. A stage will result in success or\nfailure. If a stage fails, then the pipeline stops at that stage and will remain\nstopped until either a new version of an artifact appears in the source\nlocation, or a user takes action to re-run the most recent artifact through the\npipeline. You can call GetPipelineState, which displays the status of a\npipeline, including the status of stages in the pipeline, or GetPipeline, which\nreturns the entire structure of the pipeline, including the stages of that\npipeline. For more information about the structure of stages and actions, also\nrefer to the AWS CodePipeline Pipeline Structure Reference\n[http://docs.aws.amazon.com/codepipeline/latest/userguide/pipeline-structure.html]\n.\n\nPipeline stages include actions, which are categorized into categories such as\nsource or build actions performed within a stage of a pipeline. For example, you\ncan use a source action to import artifacts into a pipeline from a source such\nas Amazon S3. Like stages, you do not work with actions directly in most cases,\nbut you do define and interact with actions when working with pipeline\noperations such as CreatePipeline and GetPipelineState. Valid action categories\nare:\n\n *  Source\n   \n   \n *  Build\n   \n   \n *  Test\n   \n   \n *  Deploy\n   \n   \n *  Approval\n   \n   \n *  Invoke\n   \n   \n\nPipelines also include transitions, which allow the transition of artifacts from\none stage to the next in a pipeline after the actions in one stage complete.\n\nYou can work with transitions by calling:\n\n *   DisableStageTransition, which prevents artifacts from transitioning to the\n   next stage in a pipeline.\n   \n   \n *   EnableStageTransition, which enables transition of artifacts between stages\n   in a pipeline. \n   \n   \n\n Using the API to integrate with AWS CodePipeline \n\nFor third-party integrators or developers who want to create their own\nintegrations with AWS CodePipeline, the expected sequence varies from the\nstandard API user. In order to integrate with AWS CodePipeline, developers will\nneed to work with the following items:\n\n Jobs, which are instances of an action. For example, a job for a source action\nmight import a revision of an artifact from a source. \n\nYou can work with jobs by calling:\n\n *   AcknowledgeJob, which confirms whether a job worker has received the\n   specified job,\n   \n   \n *   GetJobDetails, which returns the details of a job,\n   \n   \n *   PollForJobs, which determines whether there are any jobs to act upon, \n   \n   \n *   PutJobFailureResult, which provides details of a job failure, and\n   \n   \n *   PutJobSuccessResult, which provides details of a job success.\n   \n   \n\n Third party jobs, which are instances of an action created by a partner action\nand integrated into AWS CodePipeline. Partner actions are created by members of\nthe AWS Partner Network.\n\nYou can work with third party jobs by calling:\n\n *   AcknowledgeThirdPartyJob, which confirms whether a job worker has received\n   the specified job,\n   \n   \n *   GetThirdPartyJobDetails, which requests the details of a job for a partner\n   action,\n   \n   \n *   PollForThirdPartyJobs, which determines whether there are any jobs to act\n   upon, \n   \n   \n *   PutThirdPartyJobFailureResult, which provides details of a job failure, and\n   \n   \n *   PutThirdPartyJobSuccessResult, which provides details of a job success.",
    "main": "component.json",
    "dependencies": {
        "elasticio-node": "0.0.9",
        "elasticio-sailor-nodejs": "^2.2.1",
        "swagger-client": "^3.8.22"
    },
    "author": {
        "name": "Deutsche Telekom AG"
    },
    "license": "Apache-2.0"
}